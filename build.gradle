plugins {
    id 'java'
    id 'maven-publish'
    id 'org.ajoberstar.grgit' version '4.1.0'
}

group = 'net.ouja'
version = '1.20.2-R0-SNAPSHOT'

java {
    withJavadocJar()
    withSourcesJar()
}

repositories {
    mavenLocal()
    mavenCentral()
    maven {
        url 'https://libraries.minecraft.net'
    }
}

dependencies {
    implementation 'com.github.oshi:oshi-core:6.2.2'
    implementation 'com.mojang:authlib:4.0.43'
    implementation 'com.mojang:brigadier:1.1.8'
    implementation 'com.mojang:datafixerupper:6.0.8'
    implementation 'com.mojang:logging:1.1.1'
    implementation 'commons-io:commons-io:2.11.0'
    implementation 'io.netty:netty-buffer:4.1.82.Final'
    implementation 'io.netty:netty-common:4.1.82.Final'
    implementation 'io.netty:netty-handler:4.1.82.Final'
    implementation 'io.netty:netty-resolver:4.1.82.Final'
    implementation 'io.netty:netty-transport:4.1.82.Final'
    implementation 'io.netty:netty-transport-classes-epoll:4.1.82.Final'
//    implementation 'netty-transport-native-unix-common:4.1.82.Final'
    implementation 'it.unimi.dsi:fastutil-core:8.5.9'
    implementation 'net.java.dev.jna:jna:5.12.1'
    implementation 'net.java.dev.jna:jna-platform:5.12.1'
    implementation 'net.sf.jopt-simple:jopt-simple:5.0.4'
    implementation 'org.apache.commons:commons-lang3:3.12.0'
    implementation 'org.apache.logging.log4j:log4j:2.19.0'
//    implementation 'org.apache.logging.log4j:log4j-impl:2.19.0'
    implementation 'org.slf4j:slf4j-api:2.0.1'
    implementation 'org.jetbrains:annotations:24.0.0'
}

test {
    useJUnitPlatform()
}

publishing {
    publications {
        maven(MavenPublication) {
            groupId = group
            artifactId = 'api'
            version = version

            from components.java
        }
    }

    repositories {
        mavenLocal()

        maven {
            url "https://maven.ouja.net"

            authentication {
                basic(BasicAuthentication)
            }

            credentials {
                username = rootProject.getProperty('MAVEN_USER') ?: 'not'
                password = rootProject.getProperty('MAVEN_PASSWORD') ?: 'set'
            }
        }
    }
}

task generateVer {
    doLast {
        new File("$projectDir/src/main/resources/buildAPI.txt").text = getVersionMetadata()
    }
}

def getVersionMetadata() {
    def build_id = System.getenv("GITHUB_RUN_NUMBER")

    if (grgit != null) {
        def head = grgit.head()
        def id = head.abbreviatedId

        return "${version}-${id}"
    }

    // No tracking information could be found about the build
    return "${version}-unknown"
}